- name: restart hadoop-dfs
  shell: "{{ hadoop_home }}/bin/hdfs --daemon stop namenode; {{ hadoop_home }}/bin/hdfs --daemon start namenode"
  when: ( hadoop_type_of_node == 'master' ) or ( hadoop_type_of_node == 'namenode' )
  
- name: restart yarn-resourcemanager
  shell: "{{ hadoop_home }}/bin/yarn --daemon stop resourcemanager; {{ hadoop_home }}/bin/yarn --daemon start resourcemanager"
  when: ( hadoop_type_of_node == 'master' ) or ( hadoop_type_of_node == 'resourcemanager' )
   
- name: restart hadoop-datanode
  shell: "{{ hadoop_home }}/bin/hdfs --daemon stop datanode; {{ hadoop_home }}/bin/hdfs --daemon start datanode"
  when: ( hadoop_type_of_node == 'slave' ) or ( hadoop_type_of_node == 'datanode' )
  
- name: restart yarn-nodemanager
  shell: "{{ hadoop_home }}/bin/yarn --daemon stop nodemanager; {{ hadoop_home }}/bin/yarn --daemon start nodemanager"
  when: ( hadoop_type_of_node == 'slave' ) or ( hadoop_type_of_node == 'nodemanager' )
  
- name: refreshDFSNodes
  command: "{{ hadoop_home }}/bin/hdfs dfsadmin -refreshNodes"
  when: ( hadoop_type_of_node == 'master' ) or ( hadoop_type_of_node == 'namenode' )
  ignore_errors: yes

- name: refreshYarnNodes
  command: "{{ hadoop_home }}/bin/yarn rmadmin -refreshNodes"
  when: ( hadoop_type_of_node == 'master' ) or ( hadoop_type_of_node == 'resourcemanager' )
  ignore_errors: yes
