---
################################################################################
# CHECK AND STOP HDFS SERVICES (Master node)
################################################################################
- name: Check namenode daemon
  command: "{{ hadoop_home }}/bin/hdfs --daemon status namenode"
  register: namenode_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop namenode daemon
  command: "{{ hadoop_home }}/bin/hdfs --daemon stop namenode"
  when:
    - master_key == False
    - not hadoop_2
    - namenode_check is succeeded

- name: "HADOOP 2 @ Stop namenode daemon"
  command: "{{ hadoop_home }}/sbin/hadoop-daemon.sh stop namenode"
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

- name: Check secondarynamenode daemon
  command: "{{ hadoop_home }}/bin/hdfs --daemon status secondarynamenode"
  register: secondarynamenode_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop secondarynamenode daemon
  command: "{{ hadoop_home }}/bin/hdfs --daemon stop secondarynamenode"
  when:
    - master_key == False
    - not hadoop_2
    - secondarynamenode_check is succeeded

- name: "HADOOP 2 @ Stop secondarynamenode daemon"
  command: "{{ hadoop_home }}/sbin/hadoop-daemon.sh stop secondarynamenode"
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

- name: Check datanode daemon
  command: "{{ hadoop_home }}/bin/hdfs --daemon status datanode"
  register: datanode_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop datanode daemon
  command: "{{ hadoop_home }}/bin/hdfs --daemon stop datanode"
  when:
    - master_key == False
    - not hadoop_2
    - datanode_check is succeeded

- name: "HADOOP 2 @ Stop datanode daemon"
  command: "{{ hadoop_home }}/sbin/hadoop-daemon.sh stop datanode"
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

################################################################################
# CHECK AND STOP YARN SERVICES
################################################################################
- name: Check resourcemanager daemon
  command: "{{ hadoop_home }}/bin/yarn --daemon status resourcemanager"
  register: resourcemanager_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop resourcemanager daemon
  command: "{{ hadoop_home }}/bin/yarn --daemon stop resourcemanager"
  when:
    - master_key == False
    - not hadoop_2
    - resourcemanager_check is succeeded

- name: "HADOOP 2 @ Stop resourcemanager daemon"
  command: "{{ hadoop_home }}/sbin/yarn-daemon.sh stop resourcemanager"
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

- name: Check nodemanager daemon
  command: "{{ hadoop_home }}/bin/yarn --daemon status nodemanager"
  register: nodemanager_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop nodemanager daemon
  command: "{{ hadoop_home }}/bin/yarn --daemon stop nodemanager"
  when:
    - master_key == False
    - not hadoop_2
    - nodemanager_check is succeeded

- name: "HADOOP 2 @ Stop nodemanager daemon"
  command: "{{ hadoop_home }}/sbin/yarn-daemon.sh stop nodemanager"
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

################################################################################
# STOP ALL
################################################################################
- name: Stop globally hadoop
  command: "{{ hadoop_home }}/sbin/stop-all.sh"
  when:
    - master_key == True
