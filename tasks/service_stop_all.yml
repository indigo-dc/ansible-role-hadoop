---
################################################################################
# CHECK AND STOP HDFS SERVICES (Master node)
################################################################################
- name: Check namenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon status namenode"
  register: namenode_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop namenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon stop namenode"
  register: namenode_stop
  when:
    - master_key == False
    - not hadoop_2
    - namenode_check is succeeded

- name: "HADOOP 2 @ Check namenode daemon on master"
  command: "{{ hadoop_home }}/sbin/hadoop-daemon.sh start namenode"
  register: namenode_check
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

- name: "HADOOP 2 @ Stop namenode daemon on master"
  command: "{{ hadoop_home }}/sbin/hadoop-daemon.sh stop namenode"
  register: namenode_stop
  when:
    - master_key == False
    - hadoop_2
    - namenode_check is failed

- name: Check secondarynamenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon status secondarynamenode"
  register: secondarynamenode_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop secondarynamenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon stop secondarynamenode"
  when:
    - master_key == False
    - not hadoop_2
    - secondarynamenode_check is succeeded

- name: "HADOOP 2 @ Check secondarynamenode daemon on master"
  command: "{{ hadoop_home }}/sbin/hadoop-daemon.sh start secondarynamenode"
  register: secondarynamenode_check
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

- name: "HADOOP 2 @ Stop secondarynamenode daemon on master"
  command: "{{ hadoop_home }}/sbin/hadoop-daemon.sh stop secondarynamenode"
  when:
    - master_key == False
    - hadoop_2
    - secondarynamenode_check is failed

################################################################################
# CHECK AND STOP YARN SERVICES
################################################################################
- name: Check resourcemanager daemon on master
  command: "{{ hadoop_home }}/bin/yarn --daemon status resourcemanager"
  register: resourcemanager_check
  ignore_errors: True
  when:
    - master_key == False
    - not hadoop_2

- name: Stop resourcemanager daemon on master
  command: "{{ hadoop_home }}/bin/yarn --daemon stop resourcemanager"
  when:
    - master_key == False
    - not hadoop_2
    - resourcemanager_check is succeeded

- name: "HADOOP 2 @ Check resourcemanager daemon on master"
  command: "{{ hadoop_home }}/sbin/yarn-daemon.sh start resourcemanager"
  register: resourcemanager_check
  ignore_errors: True
  when:
    - master_key == False
    - hadoop_2

- name: "HADOOP 2 @ Stop resourcemanager daemon on master"
  command: "{{ hadoop_home }}/sbin/yarn-daemon.sh stop resourcemanager"
  when:
    - master_key == False
    - hadoop_2
    - resourcemanager_check is failed

################################################################################
# STOP ALL
################################################################################
- name: Stop globally hadoop
  command: "{{ hadoop_home }}/sbin/stop-all.sh"
  when:
    - master_key == True
