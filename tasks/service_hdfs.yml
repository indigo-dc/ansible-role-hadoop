---
################################################################################
# Master HDFS
- name: Check namenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon status namenode"
  register: namenode_check
  ignore_errors: True
  when: 
    - (hadoop_node_type == 'master') or (hadoop_node_type == 'namenode')

- name: Stop namenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon stop namenode"
  egister: namenode_stop
  when: 
    - (hadoop_node_type == 'master') or (hadoop_node_type == 'namenode')
    - namenode_check is succeeded

- name: format HDFS
  command: "{{ hadoop_home }}/bin/hdfs namenode -format -force"
  when: 
    - (hadoop_node_type == 'master' and hadoop_node_role == 'all') or (hadoop_node_type == 'master' and hadoop_node_role == 'namenode')
    - namenode_stop is succeeded

- name: Start namenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon start namenode"
  when: 
    - (hadoop_node_type == 'master') or (hadoop_node_type == 'namenode')

- name: Check secondarynamenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon status secondarynamenode"
  register: secondarynamenode_check
  ignore_errors: True
  when: 
    - (hadoop_node_type == 'master') or (hadoop_node_type == 'secondarynamenode')

- name: Stop secondarynamenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon stop secondarynamenode"
  when: 
    - (hadoop_node_type == 'master') or (hadoop_node_type == 'secondarynamenode')
    - secondarynamenode_check is succeeded

- name: Start secondarynamenode daemon on master
  command: "{{ hadoop_home }}/bin/hdfs --daemon start secondarynamenode"
  when: 
    - (hadoop_node_type == 'master') or (hadoop_node_type == 'secondarynamenode')

################################################################################
# Worker HDFS
- name: Start datanode daemon on workers
  command: "{{ hadoop_home }}/bin/hdfs --daemon start datanode"
  when: 
    - (hadoop_node_type == 'worker') or (hadoop_node_type == 'datanode')

################################################################################
# Start services from master

##
# HDFS
# If datanode are already running it will restart the datanodes, otherwise
# they will be started for the first time
- name: Start dfs
  command: "{{ hadoop_home }}/sbin/start-dfs.sh"
  when: 
  - master_key == True
  - (hadoop_node_type == 'master') or (hadoop_node_type == 'namenode')
